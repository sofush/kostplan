@startuml
scale 1920*1080
skinparam classAttributeIconSize 0
enum Role {
	USER
	ADMIN
	CHEF
}
class User {
	- username: String
	- password: String
	- role: Role
	- name: String
	- male: boolean
	- weight: int
	- dob: LocalDate
	- height: int
	{method} + ... constructor/getter/setter
	+ List<String> getAuthorities()
	+ double calculateBMR()
}
class Day {
	- date: LocalDate
	- username: String
	- breakfast: Recipe
	- lunch: Recipe
	- dinner: Recipe
	{method} + ... constructor/getter/setter
}
class Recipe {
	- id: Integer
	- week: int
	- title: String
	- description: String
	- nutrition_info: String
	- ingredients: List<Ingredient>
	- instructions: String
	- time: String
	{method} + ... constructor/getter/setter
	+ double sumCalories()
}
class Ingredient {
	- id: int
	- name: String
	- quantity: double
	- unit: String
	- calories: double
	{method} + ... constructor/getter/setter
	+ double sumCalories()
	+ String toString()
}
class UserController {
	- service: UserService
	+ UserController(UserService service)
	+ String login()
	+ String logout()
	+ String registerUser()
	+ String registerUserPost(String username, String password, String repeat_password, String name, String male, String weight, String dob, String height, Model model)
}
class RecipeController {
	- service: UserService
	+ RecipeController(UserService service)
	+ String displayWeek(Integer weekIndex, Principal principal, Model model)
	+ String pickRecipe(String weekday, String meal, Model model)
	+ String assignRecipeToDay(String weekday, String meal, Integer recipeId, Principal principal)
	+ String showRecipe(String weekday, String meal, Principal principal, Model model)
}
class UserService {
	- repository: UserRepository
	- encoder: PasswordEncoder
	+ UserService(UserRepository repository, PasswordEncoder encoder)
	+ void addUser(String username, String password, String name, boolean male, int weight, LocalDate dob, int height)
	+ User findUserByUsername(String username)
	+ void addDay(String username, LocalDate date, Integer breakfastId, Integer lunchId, Integer dinnerId)
	+ void updateDay(String username, LocalDate date, Integer breakfastId, Integer lunchId, Integer dinnerId)
	+ Day findDay(String username, LocalDate date)
	+ List<Day> findDaysOfWeek(String username, int weekIndex)
	+ Recipe findRecipeById(int id)
	+ List<Recipe> findRecipesForWeek(int weekIndex)
}
class UserRepository {
	- jdbc: JdbcTemplate
	+ UserRepository(JdbcTemplate jdbc)
	+ void addUser(User user)
	+ User findUserByUsername(String username)
	+ void addDay(Day day)
	+ void updateDay(Day day)
	+ Day findDay(String username, LocalDate date)
	+ Recipe findRecipeById(int id)
	+ List<Ingredient> findIngredientsForRecipe(int id)
	+ List<Recipe> findRecipesForWeek(int weekIndex)
}
class HealthUtil {
	- HealthUtil()
	+ double calculateBMR()
	+ void scaleRecipe(double calorieGoal, Recipe recipe, List<Recipe> scheduledMeals)
}
class DateUtil {
	- WEEK_ORIGIN: LocalDate
	- DateUtil()
	+ List<LocalDate> calculateDatesOfNthWeek(int weekIndex)
	+ int calculateCurrentWeekIndex()
}

' Controller, Service, Repository
UserController o-- UserService
UserService o-- UserRepository
RecipeController o-- UserService

' Util
RecipeController --- DateUtil
RecipeController --- HealthUtil
UserService -r-- DateUtil
HealthUtil -r-- User

' Entities
User " 1" *-- " 1" Role
Day " 1" *-- " 3" Recipe
Recipe " 1" *-- " 1..m" Ingredient

' Improved placement
User -r[hidden]-- Recipe
@enduml
